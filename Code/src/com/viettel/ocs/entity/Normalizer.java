package com.viettel.ocs.entity;
// Generated Sep 2, 2016 4:54:08 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

/**
 * Normalizer generated by hbm2java
 */
@Entity
@Table(name = "normalizer")
public class Normalizer extends BaseEntity implements java.io.Serializable, Cloneable {

	@Override
	@Transient
	public String getNodeName() {
		return this.normalizerName;
	}

	private Long domainId;

	@Column(name = "DOMAIN_ID")
	public Long getDomainId() {
		return domainId;
	}

	public void setDomainId(Long domainId) {
		this.domainId = domainId;
	}

	private long normalizerId;
	private String normalizerName;
	private Long normlizerType;
	private Long state;
	private Long defaultValue;
	private String inputFileds;
	private String specialFileds;
	private Long categoryId;
	private Date effDate;
	private Date startDate;
	private String remark;
	private String descriptions;
	private Long posIndex;

	private Boolean generated;

	public Normalizer() {
	}

	public Normalizer(String normalizerName, Long normlizerType, Long state, Long defaultValue, String inputFileds,
			String specialFileds, Long categoryId, Date effDate, Date startDate, String remark, String descriptions,
			Long posIndex) {
		this.normalizerName = normalizerName;
		this.normlizerType = normlizerType;
		this.state = state;
		this.defaultValue = defaultValue;
		this.inputFileds = inputFileds;
		this.specialFileds = specialFileds;
		this.categoryId = categoryId;
		this.effDate = effDate;
		this.startDate = startDate;
		this.remark = remark;
		this.descriptions = descriptions;
		this.posIndex = posIndex;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "NORMALIZER_ID", unique = true, nullable = false)
	public long getNormalizerId() {
		return this.normalizerId;
	}

	public void setNormalizerId(long normalizerId) {
		this.normalizerId = normalizerId;
	}

	@Column(name = "NORMALIZER_NAME", length = 65535)
	public String getNormalizerName() {
		return this.normalizerName;
	}

	public void setNormalizerName(String normalizerName) {
		this.normalizerName = normalizerName;
	}

	@Column(name = "NORMLIZER_TYPE")
	public Long getNormlizerType() {
		return this.normlizerType;
	}

	public void setNormlizerType(Long normlizerType) {
		this.normlizerType = normlizerType;
	}

	@Column(name = "STATE")
	public Long getState() {
		return this.state;
	}

	public void setState(Long state) {
		this.state = state;
	}

	@Column(name = "DEFAULT_VALUE")
	public Long getDefaultValue() {
		return this.defaultValue;
	}

	public void setDefaultValue(Long defaultValue) {
		this.defaultValue = defaultValue;
	}

	@Column(name = "INPUT_FILEDS", length = 65535)
	public String getInputFileds() {
		return this.inputFileds;
	}

	public void setInputFileds(String inputFileds) {
		this.inputFileds = inputFileds;
	}

	@Column(name = "SPECIAL_FILEDS", length = 65535)
	public String getSpecialFileds() {
		return this.specialFileds;
	}

	public void setSpecialFileds(String specialFileds) {
		this.specialFileds = specialFileds;
	}

	@Column(name = "CATEGORY_ID")
	public Long getCategoryId() {
		return this.categoryId;
	}

	public void setCategoryId(Long categoryId) {
		this.categoryId = categoryId;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "EFF_DATE", length = 19)
	public Date getEffDate() {
		return this.effDate;
	}

	public void setEffDate(Date effDate) {
		this.effDate = effDate;
	}

	@Column(name = "REMARK", length = 65535)
	public String getRemark() {
		return this.remark;
	}

	public void setRemark(String remark) {
		this.remark = remark;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "START_DATE", length = 19)
	public Date getStartDate() {
		return startDate;
	}

	public void setStartDate(Date startDate) {
		this.startDate = startDate;
	}

	@Column(name = "DESCRIPTIONS", length = 65535)
	public String getDescriptions() {
		return descriptions;
	}

	public void setDescriptions(String descriptions) {
		this.descriptions = descriptions;
	}

	@Override
	public Normalizer clone() throws CloneNotSupportedException {
		return (Normalizer) super.clone();
	}

	@Column(name = "POS_INDEX")
	public Long getPosIndex() {
		return posIndex;
	}

	public void setPosIndex(Long posIndex) {
		this.posIndex = posIndex;
	}

	@Column(name = "IS_GENERATED")
	public Boolean isGenerated() {
		return generated;
	}

	public void setGenerated(Boolean generated) {
		this.generated = generated;
	}

}
