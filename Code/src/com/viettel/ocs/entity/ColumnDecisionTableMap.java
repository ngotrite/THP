package com.viettel.ocs.entity;
// Generated Sep 2, 2016 4:54:08 PM by Hibernate Tools 3.2.1.GA

import static javax.persistence.GenerationType.IDENTITY;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.OnDelete;
import org.hibernate.annotations.OnDeleteAction;

/**
 * ColumnDecisionTableMap generated by hbm2java
 */
@Entity
@Table(name = "column_decision_table_map")
public class ColumnDecisionTableMap extends BaseEntity implements java.io.Serializable, Cloneable {

	@Override
	@Transient
	public String getNodeName() {
		return null;
	}

	private Long domainId;

	@Column(name = "DOMAIN_ID")
	public Long getDomainId() {
		return domainId;
	}

	public void setDomainId(Long domainId) {
		this.domainId = domainId;
	}

	private long columnDecisionTableMapId;
	private Long decisionTableId;

	private Long columnDtId;
	private Long columnIndex;

	public ColumnDecisionTableMap() {
	}

	public ColumnDecisionTableMap(Long decisionTableId, Long columnDtId) {
		this.decisionTableId = decisionTableId;
		this.columnDtId = columnDtId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "COLUMN_DECISION_TABLE_MAP_ID", unique = true, nullable = false)
	public long getColumnDecisionTableMapId() {
		return this.columnDecisionTableMapId;
	}

	public void setColumnDecisionTableMapId(long columnDecisionTableMapId) {
		this.columnDecisionTableMapId = columnDecisionTableMapId;
	}

	@Column(name = "DECISION_TABLE_ID")
	public Long getDecisionTableId() {
		return this.decisionTableId;
	}

	public void setDecisionTableId(Long decisionTableId) {
		this.decisionTableId = decisionTableId;
	}

	@OnDelete(action = OnDeleteAction.CASCADE)
	@Column(name = "COLUMN_DT_ID")
	public Long getColumnDtId() {
		return this.columnDtId;
	}

	public void setColumnDtId(Long columnDtId) {
		this.columnDtId = columnDtId;
	}

	@Column(name = "COLUMN_INDEX")
	public Long getColumnIndex() {
		return columnIndex;
	}

	public void setColumnIndex(Long columnIndex) {
		this.columnIndex = columnIndex;
	}

	@Override
	public ColumnDecisionTableMap clone() throws CloneNotSupportedException {
		return (ColumnDecisionTableMap) super.clone();
	}

}
