package com.viettel.ocs.entity;
// Generated Sep 2, 2016 4:54:08 PM by Hibernate Tools 3.2.1.GA

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * ColumnDt generated by hbm2java
 */
@Entity
@Table(name = "column_dt")
public class ColumnDt extends BaseEntity implements java.io.Serializable, Cloneable {

	@Override
	@Transient
	public String getNodeName() {
		return null;
	}

	private Long domainId;

	@Column(name = "DOMAIN_ID")
	public Long getDomainId() {
		return domainId;
	}

	public void setDomainId(Long domainId) {
		this.domainId = domainId;
	}

	private long columnId;
	private String attribute;
	private Long columnIndex;
	private String columnName;
	private Long normalizerId;

	public ColumnDt() {
	}

	public ColumnDt(String attribute, Long columnIndex, String columnName, Long normalizerId) {
		this.attribute = attribute;
		this.columnIndex = columnIndex;
		this.columnName = columnName;
		this.normalizerId = normalizerId;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "COLUMN_ID", unique = true, nullable = false)
	public long getColumnId() {
		return this.columnId;
	}

	public void setColumnId(long columnId) {
		this.columnId = columnId;
	}

	@Column(name = "ATTRIBUTE", length = 200)
	public String getAttribute() {
		return this.attribute;
	}

	public void setAttribute(String attribute) {
		this.attribute = attribute;
	}

	@Column(name = "COLUMN_INDEX")
	public Long getColumnIndex() {
		return this.columnIndex;
	}

	public void setColumnIndex(Long columnIndex) {
		this.columnIndex = columnIndex;
	}

	@Column(name = "COLUMN_NAME", length = 200)
	public String getColumnName() {
		return this.columnName;
	}

	public void setColumnName(String columnName) {
		this.columnName = columnName;
	}

	@Column(name = "NORMALIZER_ID")
	public Long getNormalizerId() {
		return this.normalizerId;
	}

	public void setNormalizerId(Long normalizerId) {
		this.normalizerId = normalizerId;
	}

	@Override
	public ColumnDt clone() throws CloneNotSupportedException {
		return (ColumnDt) super.clone();
	}
}
