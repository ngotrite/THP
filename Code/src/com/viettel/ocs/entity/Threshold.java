package com.viettel.ocs.entity;
// Generated Sep 2, 2016 4:54:08 PM by Hibernate Tools 3.2.1.GA

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Transient;

/**
 * Threshold generated by hbm2java
 */
@Entity
@Table(name = "threshold")
public class Threshold extends BaseEntity implements java.io.Serializable, Cloneable {

	@Override
	@Transient
	public String getNodeName() {
		return this.thresholdName;
	}

	private Long domainId;

	@Column(name = "DOMAIN_ID")
	public Long getDomainId() {
		return domainId;
	}

	public void setDomainId(Long domainId) {
		this.domainId = domainId;
	}

	private long thresholdId;
	private Boolean isPercentage;
	private Long thresholdType;
	private Long value;
	private Long triggerId;
	private String thresholdName;
	private String externalId;
	private Boolean forBreakRating;

	public Threshold() {
	}

	public Threshold(Boolean isPercentage, Long thresholdType, Long value, Long triggerId, String thresholdName,
			String externalId, Boolean forBreakRating) {
		this.isPercentage = isPercentage;
		this.thresholdType = thresholdType;
		this.value = value;
		this.triggerId = triggerId; 
		this.thresholdName = thresholdName;
		this.externalId = externalId;
		this.forBreakRating =forBreakRating;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "THRESHOLD_ID", unique = true, nullable = false)
	public long getThresholdId() {
		return this.thresholdId;
	}

	public void setThresholdId(long thresholdId) {
		this.thresholdId = thresholdId;
	}

	@Column(name = "IS_PERCENTAGE")
	public Boolean getIsPercentage() {
		return this.isPercentage;
	}

	public void setIsPercentage(Boolean isPercentage) {
		this.isPercentage = isPercentage;
	}

	@Column(name = "THRESHOLD_TYPE")
	public Long getThresholdType() {
		return this.thresholdType;
	}

	public void setThresholdType(Long thresholdType) {
		this.thresholdType = thresholdType;
	}

	@Column(name = "VALUE")
	public Long getValue() {
		return this.value;
	}

	public void setValue(Long value) {
		this.value = value;
	}

	@Column(name = "TRIGGER_ID")
	public Long getTriggerId() {
		return this.triggerId;
	}

	public void setTriggerId(Long triggerId) {
		this.triggerId = triggerId;
	}

	@Column(name = "THRESHOLD_NAME", length = 200)
	public String getThresholdName() {
		return this.thresholdName;
	}

	public void setThresholdName(String thresholdName) {
		this.thresholdName = thresholdName;
	}

	@Column(name = "EXTERNAL_ID", length = 80)
	public String getExternalId() {
		return this.externalId;
	}

	public void setExternalId(String externalId) {
		this.externalId = externalId;
	}
	
	@Column(name = "FOR_BREAK_RATING")
	public Boolean getForBreakRating() {
		return forBreakRating;
	}

	public void setForBreakRating(Boolean forBreakRating) {
		this.forBreakRating = forBreakRating;
	}

	@Override
	public Threshold clone() throws CloneNotSupportedException {
		return (Threshold) super.clone();
	}

}
